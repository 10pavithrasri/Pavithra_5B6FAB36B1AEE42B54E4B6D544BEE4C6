'''implement a class called bankaccount that represents a bank account.the class should have private
attributes for account number, account holder name, and account balance. include methods to 
deposite money, withdraw money, and display the account balance.ensure that the account balance
cannot be accessed directly from outside the class. write a program to create an instance of the
bankaccount class and test the deposit and withdrawl functionality.'''

class BankAccount:
 def __init__ (self, account_number, account_holder_name, initial_balance=0.0):                    
     self.__account_number = account_number 
     self.__account_holder_name = account_holder_name   
     self.__account_balance = initial_balance
 def deposit(self,amount):
   if amount>0:
      self.__account_balance +=amount
      print("deposited ₹{}.new balance:₹{}".format(amount,self.__account_balance))
   else:
     print("invalid deposit amount")
 def withdraw(self,amount):
   if amount>0 and amount <=            self.__account_balance:
      self.__account_balance -=amount
      print("withdrew ₹{}.new balance:₹{}".format(amount,
self.__account_balance))
   else:
      print("invalid withdrawl amount or insufficient balance")

 def display_balance(self):
     print("account balance for{} (account#{}):₹{}".format(
    self.__account_holder_name,self.__account_number,
     self.__account_balance))

#create an instance of the bankaccount class
account=BankAccount(account_number="987654321",
                    account_holder_name="pavithrasri",
                    initial_balance=9000.0)

#test deposit and withdrawl functionaliy
account.display_balance()
account.deposit(2000.0)
account.withdraw(500.0)
account.display_balance()